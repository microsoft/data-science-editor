{"version":3,"file":"440-4d09d6f757bf2ebcd605.js","mappings":";;;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,gDAAgD;AAChD,cAAc;AACd;AACA;AACA;AACA,4BAA4B;AAC5B,oDAAoD;;AAEpD;AACA;AACA;AACA,8IAA8I;AAC9I;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,cAAc;;AAE1C;AACA;;AAEA,0BAA0B,cAAc;AACxC;AACA;AACA;;AAEA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B,OAAO;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc;;AAE1C;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEA,0BAA0B,uBAAuB;AACjD;AACA;AACA,uCAAuC;AACvC,WAAW;AACX,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA,QAAQ;AACR;AACA,OAAO;AACP;AACA,OAAO;AACP,gDAAgD;AAChD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE,yEAAyE,EAAE,oEAAoE,EAAE;AACvK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+GAA+G;AAC/G;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,0BAA0B;;AAEtD;AACA,YAAY;AACZ,SAAS;AACT;;AAEA;AACA;AACA,kCAAkC;;AAElC,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,cAAc;;AAE/C;AACA,SAAS,+GAA+G;AACxH;AACA;AACA,wCAAwC;;AAExC,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB,mBAAmB,gCAAgC;AACrF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,cAAc;AACxD,2EAA2E;;AAE3E;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA;;AAEA,kHAAkH;AAClH;AACA;AACA;AACA,YAAY,oGAAoG;AAChH;AACA;AACA;AACA;AACA,UAAU,sBAAsB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,YAAY;AACZ;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,WAAW,WAAW;;AAEtB;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;;AAER,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;;AAER,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,OAAO;;;AAGP;AACA,qCAAqC;AACrC;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL,qCAAqC;;AAErC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK,GAAG;AACR;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,2BAA2B;;AAE3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0DAA0D;AAC1D;AACA,2EAA2E;AAC3E,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;;AAEV,OAAO;AACP;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,wBAAwB;AACjH,wEAAwE;AACxE,mEAAmE;AACnE;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iEAAiE;;AAEjE,4CAA4C;;AAE5C,2HAA2H;;AAE3H;AACA;AACA,UAAU;;;AAGV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;;AAE1B,mBAAmB;;AAEnB,mBAAmB;;AAEnB,mBAAmB;;AAEnB,mBAAmB;;AAEnB,oBAAoB;;AAEpB,oBAAoB;;AAEpB,oBAAoB;;AAEpB,qBAAqB;;AAErB,2BAA2B;;AAE3B;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA,QAAQ;;AAER;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B,kBAAkB;AAC5C;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb,oBAAoB;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;;AAGA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,iBAAiB;AACjqCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA,UAAU;AACV;;AAEA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA,OAAO;AACP,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA,2DAA2D,WAAW;AACtE;AACA;AACA;AACA,yDAAyD,MAAM;AAC/D;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,oEAAoE,KAAK,GAAG,OAAO;AACnF;AACA;AACA,2DAA2D,cAAc,OAAO,KAAK,GAAG,OAAO;AAC/F;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,uFAAuF;AACvF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;;AAEA,yCAAyC,iBAAiB;AAC1D;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,kBAAkB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,iBAAiB;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB;AACrB,UAAU;AACV;;AAEA;AACA;AACA,sBAAsB,mBAAmB;AACzC,YAAY;AACZ;AACA;AACA,sBAAsB,iDAAiD;AACvE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA,EAAE;AACF;;;AAGA;AACA,sDAAsD,GAAG;AACzD,8BAA8B,MAAM;AACpC;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM,OAAO;;AAEb,kDAAkD;;AAElD,wDAAwD;;AAExD,oCAAoC;;AAEpC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA","sources":["webpack://data-science-editor/./src/workers/csv/dist/node_modules/csv-worker.js"],"sourcesContent":["function _wrapRegExp() {\n  _wrapRegExp = function (re, groups) {\n    return new BabelRegExp(re, undefined, groups);\n  };\n\n  var _super = RegExp.prototype;\n\n  var _groups = new WeakMap();\n\n  function BabelRegExp(re, flags, groups) {\n    var _this = new RegExp(re, flags);\n\n    _groups.set(_this, groups || _groups.get(re));\n\n    return _setPrototypeOf(_this, BabelRegExp.prototype);\n  }\n\n  _inherits(BabelRegExp, RegExp);\n\n  BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n\n    if (result) result.groups = buildGroups(result, this);\n    return result;\n  };\n\n  BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (typeof substitution === \"string\") {\n      var groups = _groups.get(this);\n\n      return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n        return \"$\" + groups[name];\n      }));\n    } else if (typeof substitution === \"function\") {\n      var _this = this;\n\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = arguments;\n\n        if (typeof args[args.length - 1] !== \"object\") {\n          args = [].slice.call(args);\n          args.push(buildGroups(args, _this));\n        }\n\n        return substitution.apply(this, args);\n      });\n    } else {\n      return _super[Symbol.replace].call(this, str, substitution);\n    }\n  };\n\n  function buildGroups(result, re) {\n    var g = _groups.get(re);\n\n    return Object.keys(g).reduce(function (groups, name) {\n      groups[name] = result[g[name]];\n      return groups;\n    }, Object.create(null));\n  }\n\n  return _wrapRegExp.apply(this, arguments);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn) {\n  var module = { exports: {} };\n\treturn fn(module, module.exports), module.exports;\n}\n\n/* @license\nPapa Parse\nv5.3.2\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\nvar papaparse_min = createCommonjsModule(function (module, exports) {\n  !function (e, t) {\n    module.exports = t() ;\n  }(commonjsGlobal, function s() {\n\n    var f = \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : void 0 !== f ? f : {};\n    var n = !f.document && !!f.postMessage,\n        o = n && /blob:/i.test((f.location || {}).protocol),\n        a = {},\n        h = 0,\n        b = {\n      parse: function (e, t) {\n        var i = (t = t || {}).dynamicTyping || !1;\n        M(i) && (t.dynamicTypingFunction = i, i = {});\n\n        if (t.dynamicTyping = i, t.transform = !!M(t.transform) && t.transform, t.worker && b.WORKERS_SUPPORTED) {\n          var r = function () {\n            if (!b.WORKERS_SUPPORTED) return !1;\n            var e = (i = f.URL || f.webkitURL || null, r = s.toString(), b.BLOB_URL || (b.BLOB_URL = i.createObjectURL(new Blob([\"(\", r, \")();\"], {\n              type: \"text/javascript\"\n            })))),\n                t = new f.Worker(e);\n            var i, r;\n            return t.onmessage = _, t.id = h++, a[t.id] = t;\n          }();\n\n          return r.userStep = t.step, r.userChunk = t.chunk, r.userComplete = t.complete, r.userError = t.error, t.step = M(t.step), t.chunk = M(t.chunk), t.complete = M(t.complete), t.error = M(t.error), delete t.worker, void r.postMessage({\n            input: e,\n            config: t,\n            workerId: r.id\n          });\n        }\n\n        var n = null;\n        \"string\" == typeof e ? n = t.download ? new l(t) : new p(t) : !0 === e.readable && M(e.read) && M(e.on) ? n = new g(t) : (f.File && e instanceof File || e instanceof Object) && (n = new c(t));\n        return n.stream(e);\n      },\n      unparse: function (e, t) {\n        var n = !1,\n            _ = !0,\n            m = \",\",\n            y = \"\\r\\n\",\n            s = '\"',\n            a = s + s,\n            i = !1,\n            r = null,\n            o = !1;\n\n        !function () {\n          if (\"object\" != typeof t) return;\n          \"string\" != typeof t.delimiter || b.BAD_DELIMITERS.filter(function (e) {\n            return -1 !== t.delimiter.indexOf(e);\n          }).length || (m = t.delimiter);\n          (\"boolean\" == typeof t.quotes || \"function\" == typeof t.quotes || Array.isArray(t.quotes)) && (n = t.quotes);\n          \"boolean\" != typeof t.skipEmptyLines && \"string\" != typeof t.skipEmptyLines || (i = t.skipEmptyLines);\n          \"string\" == typeof t.newline && (y = t.newline);\n          \"string\" == typeof t.quoteChar && (s = t.quoteChar);\n          \"boolean\" == typeof t.header && (_ = t.header);\n\n          if (Array.isArray(t.columns)) {\n            if (0 === t.columns.length) throw new Error(\"Option columns is empty\");\n            r = t.columns;\n          }\n\n          void 0 !== t.escapeChar && (a = t.escapeChar + s);\n          (\"boolean\" == typeof t.escapeFormulae || t.escapeFormulae instanceof RegExp) && (o = t.escapeFormulae instanceof RegExp ? t.escapeFormulae : /^[=+\\-@\\t\\r].*$/);\n        }();\n        var h = new RegExp(j(s), \"g\");\n        \"string\" == typeof e && (e = JSON.parse(e));\n\n        if (Array.isArray(e)) {\n          if (!e.length || Array.isArray(e[0])) return u(null, e, i);\n          if (\"object\" == typeof e[0]) return u(r || Object.keys(e[0]), e, i);\n        } else if (\"object\" == typeof e) return \"string\" == typeof e.data && (e.data = JSON.parse(e.data)), Array.isArray(e.data) && (e.fields || (e.fields = e.meta && e.meta.fields || r), e.fields || (e.fields = Array.isArray(e.data[0]) ? e.fields : \"object\" == typeof e.data[0] ? Object.keys(e.data[0]) : []), Array.isArray(e.data[0]) || \"object\" == typeof e.data[0] || (e.data = [e.data])), u(e.fields || [], e.data || [], i);\n\n        throw new Error(\"Unable to serialize unrecognized input\");\n\n        function u(e, t, i) {\n          var r = \"\";\n          \"string\" == typeof e && (e = JSON.parse(e)), \"string\" == typeof t && (t = JSON.parse(t));\n          var n = Array.isArray(e) && 0 < e.length,\n              s = !Array.isArray(t[0]);\n\n          if (n && _) {\n            for (var a = 0; a < e.length; a++) 0 < a && (r += m), r += v(e[a], a);\n\n            0 < t.length && (r += y);\n          }\n\n          for (var o = 0; o < t.length; o++) {\n            var h = n ? e.length : t[o].length,\n                u = !1,\n                f = n ? 0 === Object.keys(t[o]).length : 0 === t[o].length;\n\n            if (i && !n && (u = \"greedy\" === i ? \"\" === t[o].join(\"\").trim() : 1 === t[o].length && 0 === t[o][0].length), \"greedy\" === i && n) {\n              for (var d = [], l = 0; l < h; l++) {\n                var c = s ? e[l] : l;\n                d.push(t[o][c]);\n              }\n\n              u = \"\" === d.join(\"\").trim();\n            }\n\n            if (!u) {\n              for (var p = 0; p < h; p++) {\n                0 < p && !f && (r += m);\n                var g = n && s ? e[p] : p;\n                r += v(t[o][g], p);\n              }\n\n              o < t.length - 1 && (!i || 0 < h && !f) && (r += y);\n            }\n          }\n\n          return r;\n        }\n\n        function v(e, t) {\n          if (null == e) return \"\";\n          if (e.constructor === Date) return JSON.stringify(e).slice(1, 25);\n          var i = !1;\n          o && \"string\" == typeof e && o.test(e) && (e = \"'\" + e, i = !0);\n          var r = e.toString().replace(h, a);\n          return (i = i || !0 === n || \"function\" == typeof n && n(e, t) || Array.isArray(n) && n[t] || function (e, t) {\n            for (var i = 0; i < t.length; i++) if (-1 < e.indexOf(t[i])) return !0;\n\n            return !1;\n          }(r, b.BAD_DELIMITERS) || -1 < r.indexOf(m) || \" \" === r.charAt(0) || \" \" === r.charAt(r.length - 1)) ? s + r + s : r;\n        }\n      }\n    };\n\n    if (b.RECORD_SEP = String.fromCharCode(30), b.UNIT_SEP = String.fromCharCode(31), b.BYTE_ORDER_MARK = \"\\ufeff\", b.BAD_DELIMITERS = [\"\\r\", \"\\n\", '\"', b.BYTE_ORDER_MARK], b.WORKERS_SUPPORTED = !n && !!f.Worker, b.NODE_STREAM_INPUT = 1, b.LocalChunkSize = 10485760, b.RemoteChunkSize = 5242880, b.DefaultDelimiter = \",\", b.Parser = E, b.ParserHandle = i, b.NetworkStreamer = l, b.FileStreamer = c, b.StringStreamer = p, b.ReadableStreamStreamer = g, f.jQuery) {\n      var d = f.jQuery;\n\n      d.fn.parse = function (o) {\n        var i = o.config || {},\n            h = [];\n        return this.each(function (e) {\n          if (!(\"INPUT\" === d(this).prop(\"tagName\").toUpperCase() && \"file\" === d(this).attr(\"type\").toLowerCase() && f.FileReader) || !this.files || 0 === this.files.length) return !0;\n\n          for (var t = 0; t < this.files.length; t++) h.push({\n            file: this.files[t],\n            inputElem: this,\n            instanceConfig: d.extend({}, i)\n          });\n        }), e(), this;\n\n        function e() {\n          if (0 !== h.length) {\n            var e,\n                t,\n                i,\n                r,\n                n = h[0];\n\n            if (M(o.before)) {\n              var s = o.before(n.file, n.inputElem);\n\n              if (\"object\" == typeof s) {\n                if (\"abort\" === s.action) return e = \"AbortError\", t = n.file, i = n.inputElem, r = s.reason, void (M(o.error) && o.error({\n                  name: e\n                }, t, i, r));\n                if (\"skip\" === s.action) return void u();\n                \"object\" == typeof s.config && (n.instanceConfig = d.extend(n.instanceConfig, s.config));\n              } else if (\"skip\" === s) return void u();\n            }\n\n            var a = n.instanceConfig.complete;\n            n.instanceConfig.complete = function (e) {\n              M(a) && a(e, n.file, n.inputElem), u();\n            }, b.parse(n.file, n.instanceConfig);\n          } else M(o.complete) && o.complete();\n        }\n\n        function u() {\n          h.splice(0, 1), e();\n        }\n      };\n    }\n\n    function u(e) {\n      this._handle = null, this._finished = !1, this._completed = !1, this._halted = !1, this._input = null, this._baseIndex = 0, this._partialLine = \"\", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = !0, this._completeResults = {\n        data: [],\n        errors: [],\n        meta: {}\n      }, function (e) {\n        var t = w(e);\n        t.chunkSize = parseInt(t.chunkSize), e.step || e.chunk || (t.chunkSize = null);\n        this._handle = new i(t), (this._handle.streamer = this)._config = t;\n      }.call(this, e), this.parseChunk = function (e, t) {\n        if (this.isFirstChunk && M(this._config.beforeFirstChunk)) {\n          var i = this._config.beforeFirstChunk(e);\n\n          void 0 !== i && (e = i);\n        }\n\n        this.isFirstChunk = !1, this._halted = !1;\n        var r = this._partialLine + e;\n        this._partialLine = \"\";\n\n        var n = this._handle.parse(r, this._baseIndex, !this._finished);\n\n        if (!this._handle.paused() && !this._handle.aborted()) {\n          var s = n.meta.cursor;\n          this._finished || (this._partialLine = r.substring(s - this._baseIndex), this._baseIndex = s), n && n.data && (this._rowCount += n.data.length);\n          var a = this._finished || this._config.preview && this._rowCount >= this._config.preview;\n          if (o) f.postMessage({\n            results: n,\n            workerId: b.WORKER_ID,\n            finished: a\n          });else if (M(this._config.chunk) && !t) {\n            if (this._config.chunk(n, this._handle), this._handle.paused() || this._handle.aborted()) return void (this._halted = !0);\n            n = void 0, this._completeResults = void 0;\n          }\n          return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(n.data), this._completeResults.errors = this._completeResults.errors.concat(n.errors), this._completeResults.meta = n.meta), this._completed || !a || !M(this._config.complete) || n && n.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = !0), a || n && n.meta.paused || this._nextChunk(), n;\n        }\n\n        this._halted = !0;\n      }, this._sendError = function (e) {\n        M(this._config.error) ? this._config.error(e) : o && this._config.error && f.postMessage({\n          workerId: b.WORKER_ID,\n          error: e,\n          finished: !1\n        });\n      };\n    }\n\n    function l(e) {\n      var r;\n      (e = e || {}).chunkSize || (e.chunkSize = b.RemoteChunkSize), u.call(this, e), this._nextChunk = n ? function () {\n        this._readChunk(), this._chunkLoaded();\n      } : function () {\n        this._readChunk();\n      }, this.stream = function (e) {\n        this._input = e, this._nextChunk();\n      }, this._readChunk = function () {\n        if (this._finished) this._chunkLoaded();else {\n          if (r = new XMLHttpRequest(), this._config.withCredentials && (r.withCredentials = this._config.withCredentials), n || (r.onload = v(this._chunkLoaded, this), r.onerror = v(this._chunkError, this)), r.open(this._config.downloadRequestBody ? \"POST\" : \"GET\", this._input, !n), this._config.downloadRequestHeaders) {\n            var e = this._config.downloadRequestHeaders;\n\n            for (var t in e) r.setRequestHeader(t, e[t]);\n          }\n\n          if (this._config.chunkSize) {\n            var i = this._start + this._config.chunkSize - 1;\n            r.setRequestHeader(\"Range\", \"bytes=\" + this._start + \"-\" + i);\n          }\n\n          try {\n            r.send(this._config.downloadRequestBody);\n          } catch (e) {\n            this._chunkError(e.message);\n          }\n\n          n && 0 === r.status && this._chunkError();\n        }\n      }, this._chunkLoaded = function () {\n        4 === r.readyState && (r.status < 200 || 400 <= r.status ? this._chunkError() : (this._start += this._config.chunkSize ? this._config.chunkSize : r.responseText.length, this._finished = !this._config.chunkSize || this._start >= function (e) {\n          var t = e.getResponseHeader(\"Content-Range\");\n          if (null === t) return -1;\n          return parseInt(t.substring(t.lastIndexOf(\"/\") + 1));\n        }(r), this.parseChunk(r.responseText)));\n      }, this._chunkError = function (e) {\n        var t = r.statusText || e;\n\n        this._sendError(new Error(t));\n      };\n    }\n\n    function c(e) {\n      var r, n;\n      (e = e || {}).chunkSize || (e.chunkSize = b.LocalChunkSize), u.call(this, e);\n      var s = \"undefined\" != typeof FileReader;\n      this.stream = function (e) {\n        this._input = e, n = e.slice || e.webkitSlice || e.mozSlice, s ? ((r = new FileReader()).onload = v(this._chunkLoaded, this), r.onerror = v(this._chunkError, this)) : r = new FileReaderSync(), this._nextChunk();\n      }, this._nextChunk = function () {\n        this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();\n      }, this._readChunk = function () {\n        var e = this._input;\n\n        if (this._config.chunkSize) {\n          var t = Math.min(this._start + this._config.chunkSize, this._input.size);\n          e = n.call(e, this._start, t);\n        }\n\n        var i = r.readAsText(e, this._config.encoding);\n        s || this._chunkLoaded({\n          target: {\n            result: i\n          }\n        });\n      }, this._chunkLoaded = function (e) {\n        this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(e.target.result);\n      }, this._chunkError = function () {\n        this._sendError(r.error);\n      };\n    }\n\n    function p(e) {\n      var i;\n      u.call(this, e = e || {}), this.stream = function (e) {\n        return i = e, this._nextChunk();\n      }, this._nextChunk = function () {\n        if (!this._finished) {\n          var e,\n              t = this._config.chunkSize;\n          return t ? (e = i.substring(0, t), i = i.substring(t)) : (e = i, i = \"\"), this._finished = !i, this.parseChunk(e);\n        }\n      };\n    }\n\n    function g(e) {\n      u.call(this, e = e || {});\n      var t = [],\n          i = !0,\n          r = !1;\n      this.pause = function () {\n        u.prototype.pause.apply(this, arguments), this._input.pause();\n      }, this.resume = function () {\n        u.prototype.resume.apply(this, arguments), this._input.resume();\n      }, this.stream = function (e) {\n        this._input = e, this._input.on(\"data\", this._streamData), this._input.on(\"end\", this._streamEnd), this._input.on(\"error\", this._streamError);\n      }, this._checkIsFinished = function () {\n        r && 1 === t.length && (this._finished = !0);\n      }, this._nextChunk = function () {\n        this._checkIsFinished(), t.length ? this.parseChunk(t.shift()) : i = !0;\n      }, this._streamData = v(function (e) {\n        try {\n          t.push(\"string\" == typeof e ? e : e.toString(this._config.encoding)), i && (i = !1, this._checkIsFinished(), this.parseChunk(t.shift()));\n        } catch (e) {\n          this._streamError(e);\n        }\n      }, this), this._streamError = v(function (e) {\n        this._streamCleanUp(), this._sendError(e);\n      }, this), this._streamEnd = v(function () {\n        this._streamCleanUp(), r = !0, this._streamData(\"\");\n      }, this), this._streamCleanUp = v(function () {\n        this._input.removeListener(\"data\", this._streamData), this._input.removeListener(\"end\", this._streamEnd), this._input.removeListener(\"error\", this._streamError);\n      }, this);\n    }\n\n    function i(m) {\n      var a,\n          o,\n          h,\n          r = Math.pow(2, 53),\n          n = -r,\n          s = /^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/,\n          u = /^(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))$/,\n          t = this,\n          i = 0,\n          f = 0,\n          d = !1,\n          e = !1,\n          l = [],\n          c = {\n        data: [],\n        errors: [],\n        meta: {}\n      };\n\n      if (M(m.step)) {\n        var p = m.step;\n\n        m.step = function (e) {\n          if (c = e, _()) g();else {\n            if (g(), 0 === c.data.length) return;\n            i += e.data.length, m.preview && i > m.preview ? o.abort() : (c.data = c.data[0], p(c, t));\n          }\n        };\n      }\n\n      function y(e) {\n        return \"greedy\" === m.skipEmptyLines ? \"\" === e.join(\"\").trim() : 1 === e.length && 0 === e[0].length;\n      }\n\n      function g() {\n        return c && h && (k(\"Delimiter\", \"UndetectableDelimiter\", \"Unable to auto-detect delimiting character; defaulted to '\" + b.DefaultDelimiter + \"'\"), h = !1), m.skipEmptyLines && (c.data = c.data.filter(function (e) {\n          return !y(e);\n        })), _() && function () {\n          if (!c) return;\n\n          function e(e, t) {\n            M(m.transformHeader) && (e = m.transformHeader(e, t)), l.push(e);\n          }\n\n          if (Array.isArray(c.data[0])) {\n            for (var t = 0; _() && t < c.data.length; t++) c.data[t].forEach(e);\n\n            c.data.splice(0, 1);\n          } else c.data.forEach(e);\n        }(), function () {\n          if (!c || !m.header && !m.dynamicTyping && !m.transform) return c;\n\n          function e(e, t) {\n            var i,\n                r = m.header ? {} : [];\n\n            for (i = 0; i < e.length; i++) {\n              var n = i,\n                  s = e[i];\n              m.header && (n = i >= l.length ? \"__parsed_extra\" : l[i]), m.transform && (s = m.transform(s, n)), s = v(n, s), \"__parsed_extra\" === n ? (r[n] = r[n] || [], r[n].push(s)) : r[n] = s;\n            }\n\n            return m.header && (i > l.length ? k(\"FieldMismatch\", \"TooManyFields\", \"Too many fields: expected \" + l.length + \" fields but parsed \" + i, f + t) : i < l.length && k(\"FieldMismatch\", \"TooFewFields\", \"Too few fields: expected \" + l.length + \" fields but parsed \" + i, f + t)), r;\n          }\n\n          var t = 1;\n          !c.data.length || Array.isArray(c.data[0]) ? (c.data = c.data.map(e), t = c.data.length) : c.data = e(c.data, 0);\n          m.header && c.meta && (c.meta.fields = l);\n          return f += t, c;\n        }();\n      }\n\n      function _() {\n        return m.header && 0 === l.length;\n      }\n\n      function v(e, t) {\n        return i = e, m.dynamicTypingFunction && void 0 === m.dynamicTyping[i] && (m.dynamicTyping[i] = m.dynamicTypingFunction(i)), !0 === (m.dynamicTyping[i] || m.dynamicTyping) ? \"true\" === t || \"TRUE\" === t || \"false\" !== t && \"FALSE\" !== t && (function (e) {\n          if (s.test(e)) {\n            var t = parseFloat(e);\n            if (n < t && t < r) return !0;\n          }\n\n          return !1;\n        }(t) ? parseFloat(t) : u.test(t) ? new Date(t) : \"\" === t ? null : t) : t;\n        var i;\n      }\n\n      function k(e, t, i, r) {\n        var n = {\n          type: e,\n          code: t,\n          message: i\n        };\n        void 0 !== r && (n.row = r), c.errors.push(n);\n      }\n\n      this.parse = function (e, t, i) {\n        var r = m.quoteChar || '\"';\n        if (m.newline || (m.newline = function (e, t) {\n          e = e.substring(0, 1048576);\n          var i = new RegExp(j(t) + \"([^]*?)\" + j(t), \"gm\"),\n              r = (e = e.replace(i, \"\")).split(\"\\r\"),\n              n = e.split(\"\\n\"),\n              s = 1 < n.length && n[0].length < r[0].length;\n          if (1 === r.length || s) return \"\\n\";\n\n          for (var a = 0, o = 0; o < r.length; o++) \"\\n\" === r[o][0] && a++;\n\n          return a >= r.length / 2 ? \"\\r\\n\" : \"\\r\";\n        }(e, r)), h = !1, m.delimiter) M(m.delimiter) && (m.delimiter = m.delimiter(e), c.meta.delimiter = m.delimiter);else {\n          var n = function (e, t, i, r, n) {\n            var s, a, o, h;\n            n = n || [\",\", \"\\t\", \"|\", \";\", b.RECORD_SEP, b.UNIT_SEP];\n\n            for (var u = 0; u < n.length; u++) {\n              var f = n[u],\n                  d = 0,\n                  l = 0,\n                  c = 0;\n              o = void 0;\n\n              for (var p = new E({\n                comments: r,\n                delimiter: f,\n                newline: t,\n                preview: 10\n              }).parse(e), g = 0; g < p.data.length; g++) if (i && y(p.data[g])) c++;else {\n                var _ = p.data[g].length;\n                l += _, void 0 !== o ? 0 < _ && (d += Math.abs(_ - o), o = _) : o = _;\n              }\n\n              0 < p.data.length && (l /= p.data.length - c), (void 0 === a || d <= a) && (void 0 === h || h < l) && 1.99 < l && (a = d, s = f, h = l);\n            }\n\n            return {\n              successful: !!(m.delimiter = s),\n              bestDelimiter: s\n            };\n          }(e, m.newline, m.skipEmptyLines, m.comments, m.delimitersToGuess);\n\n          n.successful ? m.delimiter = n.bestDelimiter : (h = !0, m.delimiter = b.DefaultDelimiter), c.meta.delimiter = m.delimiter;\n        }\n        var s = w(m);\n        return m.preview && m.header && s.preview++, a = e, o = new E(s), c = o.parse(a, t, i), g(), d ? {\n          meta: {\n            paused: !0\n          }\n        } : c || {\n          meta: {\n            paused: !1\n          }\n        };\n      }, this.paused = function () {\n        return d;\n      }, this.pause = function () {\n        d = !0, o.abort(), a = M(m.chunk) ? \"\" : a.substring(o.getCharIndex());\n      }, this.resume = function () {\n        t.streamer._halted ? (d = !1, t.streamer.parseChunk(a, !0)) : setTimeout(t.resume, 3);\n      }, this.aborted = function () {\n        return e;\n      }, this.abort = function () {\n        e = !0, o.abort(), c.meta.aborted = !0, M(m.complete) && m.complete(c), a = \"\";\n      };\n    }\n\n    function j(e) {\n      return e.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    }\n\n    function E(e) {\n      var S,\n          O = (e = e || {}).delimiter,\n          x = e.newline,\n          I = e.comments,\n          T = e.step,\n          D = e.preview,\n          A = e.fastMode,\n          L = S = void 0 === e.quoteChar || null === e.quoteChar ? '\"' : e.quoteChar;\n      if (void 0 !== e.escapeChar && (L = e.escapeChar), (\"string\" != typeof O || -1 < b.BAD_DELIMITERS.indexOf(O)) && (O = \",\"), I === O) throw new Error(\"Comment character same as delimiter\");\n      !0 === I ? I = \"#\" : (\"string\" != typeof I || -1 < b.BAD_DELIMITERS.indexOf(I)) && (I = !1), \"\\n\" !== x && \"\\r\" !== x && \"\\r\\n\" !== x && (x = \"\\n\");\n      var F = 0,\n          z = !1;\n      this.parse = function (r, t, i) {\n        if (\"string\" != typeof r) throw new Error(\"Input must be a string\");\n        var n = r.length,\n            e = O.length,\n            s = x.length,\n            a = I.length,\n            o = M(T),\n            h = [],\n            u = [],\n            f = [],\n            d = F = 0;\n        if (!r) return C();\n\n        if (A || !1 !== A && -1 === r.indexOf(S)) {\n          for (var l = r.split(x), c = 0; c < l.length; c++) {\n            if (f = l[c], F += f.length, c !== l.length - 1) F += x.length;else if (i) return C();\n\n            if (!I || f.substring(0, a) !== I) {\n              if (o) {\n                if (h = [], k(f.split(O)), R(), z) return C();\n              } else k(f.split(O));\n\n              if (D && D <= c) return h = h.slice(0, D), C(!0);\n            }\n          }\n\n          return C();\n        }\n\n        for (var p = r.indexOf(O, F), g = r.indexOf(x, F), _ = new RegExp(j(L) + j(S), \"g\"), m = r.indexOf(S, F);;) if (r[F] !== S) {\n          if (I && 0 === f.length && r.substring(F, F + a) === I) {\n            if (-1 === g) return C();\n            F = g + s, g = r.indexOf(x, F), p = r.indexOf(O, F);\n          } else if (-1 !== p && (p < g || -1 === g)) f.push(r.substring(F, p)), F = p + e, p = r.indexOf(O, F);else {\n            if (-1 === g) break;\n            if (f.push(r.substring(F, g)), w(g + s), o && (R(), z)) return C();\n            if (D && h.length >= D) return C(!0);\n          }\n        } else for (m = F, F++;;) {\n          if (-1 === (m = r.indexOf(S, m + 1))) return i || u.push({\n            type: \"Quotes\",\n            code: \"MissingQuotes\",\n            message: \"Quoted field unterminated\",\n            row: h.length,\n            index: F\n          }), E();\n          if (m === n - 1) return E(r.substring(F, m).replace(_, S));\n\n          if (S !== L || r[m + 1] !== L) {\n            if (S === L || 0 === m || r[m - 1] !== L) {\n              -1 !== p && p < m + 1 && (p = r.indexOf(O, m + 1)), -1 !== g && g < m + 1 && (g = r.indexOf(x, m + 1));\n              var y = b(-1 === g ? p : Math.min(p, g));\n\n              if (r.substr(m + 1 + y, e) === O) {\n                f.push(r.substring(F, m).replace(_, S)), r[F = m + 1 + y + e] !== S && (m = r.indexOf(S, F)), p = r.indexOf(O, F), g = r.indexOf(x, F);\n                break;\n              }\n\n              var v = b(g);\n\n              if (r.substring(m + 1 + v, m + 1 + v + s) === x) {\n                if (f.push(r.substring(F, m).replace(_, S)), w(m + 1 + v + s), p = r.indexOf(O, F), m = r.indexOf(S, F), o && (R(), z)) return C();\n                if (D && h.length >= D) return C(!0);\n                break;\n              }\n\n              u.push({\n                type: \"Quotes\",\n                code: \"InvalidQuotes\",\n                message: \"Trailing quote on quoted field is malformed\",\n                row: h.length,\n                index: F\n              }), m++;\n            }\n          } else m++;\n        }\n\n        return E();\n\n        function k(e) {\n          h.push(e), d = F;\n        }\n\n        function b(e) {\n          var t = 0;\n\n          if (-1 !== e) {\n            var i = r.substring(m + 1, e);\n            i && \"\" === i.trim() && (t = i.length);\n          }\n\n          return t;\n        }\n\n        function E(e) {\n          return i || (void 0 === e && (e = r.substring(F)), f.push(e), F = n, k(f), o && R()), C();\n        }\n\n        function w(e) {\n          F = e, k(f), f = [], g = r.indexOf(x, F);\n        }\n\n        function C(e) {\n          return {\n            data: h,\n            errors: u,\n            meta: {\n              delimiter: O,\n              linebreak: x,\n              aborted: z,\n              truncated: !!e,\n              cursor: d + (t || 0)\n            }\n          };\n        }\n\n        function R() {\n          T(C()), h = [], u = [];\n        }\n      }, this.abort = function () {\n        z = !0;\n      }, this.getCharIndex = function () {\n        return F;\n      };\n    }\n\n    function _(e) {\n      var t = e.data,\n          i = a[t.workerId],\n          r = !1;\n      if (t.error) i.userError(t.error, t.file);else if (t.results && t.results.data) {\n        var n = {\n          abort: function () {\n            r = !0, m(t.workerId, {\n              data: [],\n              errors: [],\n              meta: {\n                aborted: !0\n              }\n            });\n          },\n          pause: y,\n          resume: y\n        };\n\n        if (M(i.userStep)) {\n          for (var s = 0; s < t.results.data.length && (i.userStep({\n            data: t.results.data[s],\n            errors: t.results.errors,\n            meta: t.results.meta\n          }, n), !r); s++);\n\n          delete t.results;\n        } else M(i.userChunk) && (i.userChunk(t.results, n, t.file), delete t.results);\n      }\n      t.finished && !r && m(t.workerId, t.results);\n    }\n\n    function m(e, t) {\n      var i = a[e];\n      M(i.userComplete) && i.userComplete(t), i.terminate(), delete a[e];\n    }\n\n    function y() {\n      throw new Error(\"Not implemented.\");\n    }\n\n    function w(e) {\n      if (\"object\" != typeof e || null === e) return e;\n      var t = Array.isArray(e) ? [] : {};\n\n      for (var i in e) t[i] = w(e[i]);\n\n      return t;\n    }\n\n    function v(e, t) {\n      return function () {\n        e.apply(t, arguments);\n      };\n    }\n\n    function M(e) {\n      return \"function\" == typeof e;\n    }\n\n    return o && (f.onmessage = function (e) {\n      var t = e.data;\n      void 0 === b.WORKER_ID && t && (b.WORKER_ID = t.workerId);\n      if (\"string\" == typeof t.input) f.postMessage({\n        workerId: b.WORKER_ID,\n        results: b.parse(t.input, t.config),\n        finished: !0\n      });else if (f.File && t.input instanceof File || t.input instanceof Object) {\n        var i = b.parse(t.input, t.config);\n        i && f.postMessage({\n          workerId: b.WORKER_ID,\n          results: i,\n          finished: !0\n        });\n      }\n    }), (l.prototype = Object.create(u.prototype)).constructor = l, (c.prototype = Object.create(u.prototype)).constructor = c, (p.prototype = Object.create(p.prototype)).constructor = p, (g.prototype = Object.create(u.prototype)).constructor = g, b;\n  });\n});\n\nvar dist = createCommonjsModule(function (module, exports) {\n  (function (global, factory) {\n    module.exports = factory() ;\n  })(commonjsGlobal, function () {\n\n    function createCommonjsModule(fn, module) {\n      return module = {\n        exports: {}\n      }, fn(module, module.exports), module.exports;\n    }\n\n    var _global = createCommonjsModule(function (module) {\n      // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n      var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self // eslint-disable-next-line no-new-func\n      : Function('return this')();\n\n      if (typeof __g == 'number') {\n        __g = global;\n      } // eslint-disable-line no-undef\n\n    });\n\n    var _core = createCommonjsModule(function (module) {\n      var core = module.exports = {\n        version: '2.6.5'\n      };\n\n      if (typeof __e == 'number') {\n        __e = core;\n      } // eslint-disable-line no-undef\n\n    });\n\n    var _isObject = function _isObject(it) {\n      return typeof it === 'object' ? it !== null : typeof it === 'function';\n    };\n\n    var _anObject = function _anObject(it) {\n      if (!_isObject(it)) {\n        throw TypeError(it + ' is not an object!');\n      }\n\n      return it;\n    };\n\n    var _fails = function _fails(exec) {\n      try {\n        return !!exec();\n      } catch (e) {\n        return true;\n      }\n    }; // Thank's IE8 for his funny defineProperty\n\n\n    var _descriptors = !_fails(function () {\n      return Object.defineProperty({}, 'a', {\n        get: function () {\n          return 7;\n        }\n      }).a != 7;\n    });\n\n    var document = _global.document; // typeof document.createElement is 'object' in old IE\n\n    var is = _isObject(document) && _isObject(document.createElement);\n\n    var _domCreate = function _domCreate(it) {\n      return is ? document.createElement(it) : {};\n    };\n\n    var _ie8DomDefine = !_descriptors && !_fails(function () {\n      return Object.defineProperty(_domCreate('div'), 'a', {\n        get: function () {\n          return 7;\n        }\n      }).a != 7;\n    }); // 7.1.1 ToPrimitive(input [, PreferredType])\n    // instead of the ES6 spec version, we didn't implement @@toPrimitive case\n    // and the second argument - flag - preferred type is a string\n\n\n    var _toPrimitive = function _toPrimitive(it, S) {\n      if (!_isObject(it)) {\n        return it;\n      }\n\n      var fn, val;\n\n      if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) {\n        return val;\n      }\n\n      if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) {\n        return val;\n      }\n\n      if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) {\n        return val;\n      }\n\n      throw TypeError(\"Can't convert object to primitive value\");\n    };\n\n    var dP = Object.defineProperty;\n    var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n      _anObject(O);\n\n      P = _toPrimitive(P, true);\n\n      _anObject(Attributes);\n\n      if (_ie8DomDefine) {\n        try {\n          return dP(O, P, Attributes);\n        } catch (e) {\n          /* empty */\n        }\n      }\n\n      if ('get' in Attributes || 'set' in Attributes) {\n        throw TypeError('Accessors not supported!');\n      }\n\n      if ('value' in Attributes) {\n        O[P] = Attributes.value;\n      }\n\n      return O;\n    };\n    var _objectDp = {\n      f: f\n    };\n\n    var _propertyDesc = function _propertyDesc(bitmap, value) {\n      return {\n        enumerable: !(bitmap & 1),\n        configurable: !(bitmap & 2),\n        writable: !(bitmap & 4),\n        value: value\n      };\n    };\n\n    var _hide = _descriptors ? function (object, key, value) {\n      return _objectDp.f(object, key, _propertyDesc(1, value));\n    } : function (object, key, value) {\n      object[key] = value;\n      return object;\n    };\n\n    var hasOwnProperty = {}.hasOwnProperty;\n\n    var _has = function _has(it, key) {\n      return hasOwnProperty.call(it, key);\n    };\n\n    var id = 0;\n    var px = Math.random();\n\n    var _uid = function _uid(key) {\n      return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n    };\n\n    var _shared = createCommonjsModule(function (module) {\n      var SHARED = '__core-js_shared__';\n      var store = _global[SHARED] || (_global[SHARED] = {});\n      (module.exports = function (key, value) {\n        return store[key] || (store[key] = value !== undefined ? value : {});\n      })('versions', []).push({\n        version: _core.version,\n        mode: 'global',\n        copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n      });\n    });\n\n    var _functionToString = _shared('native-function-to-string', Function.toString);\n\n    var _redefine = createCommonjsModule(function (module) {\n      var SRC = _uid('src');\n\n      var TO_STRING = 'toString';\n\n      var TPL = ('' + _functionToString).split(TO_STRING);\n\n      _core.inspectSource = function (it) {\n        return _functionToString.call(it);\n      };\n\n      (module.exports = function (O, key, val, safe) {\n        var isFunction = typeof val == 'function';\n\n        if (isFunction) {\n          _has(val, 'name') || _hide(val, 'name', key);\n        }\n\n        if (O[key] === val) {\n          return;\n        }\n\n        if (isFunction) {\n          _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n        }\n\n        if (O === _global) {\n          O[key] = val;\n        } else if (!safe) {\n          delete O[key];\n\n          _hide(O, key, val);\n        } else if (O[key]) {\n          O[key] = val;\n        } else {\n          _hide(O, key, val);\n        } // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\n      })(Function.prototype, TO_STRING, function toString() {\n        return typeof this == 'function' && this[SRC] || _functionToString.call(this);\n      });\n    });\n\n    var _aFunction = function _aFunction(it) {\n      if (typeof it != 'function') {\n        throw TypeError(it + ' is not a function!');\n      }\n\n      return it;\n    }; // optional / simple context binding\n\n\n    var _ctx = function _ctx(fn, that, length) {\n      _aFunction(fn);\n\n      if (that === undefined) {\n        return fn;\n      }\n\n      switch (length) {\n        case 1:\n          return function (a) {\n            return fn.call(that, a);\n          };\n\n        case 2:\n          return function (a, b) {\n            return fn.call(that, a, b);\n          };\n\n        case 3:\n          return function (a, b, c) {\n            return fn.call(that, a, b, c);\n          };\n      }\n\n      return function\n        /* ...args */\n      () {\n        return fn.apply(that, arguments);\n      };\n    };\n\n    var PROTOTYPE = 'prototype';\n\n    var $export = function $export(type, name, source) {\n      var IS_FORCED = type & $export.F;\n      var IS_GLOBAL = type & $export.G;\n      var IS_STATIC = type & $export.S;\n      var IS_PROTO = type & $export.P;\n      var IS_BIND = type & $export.B;\n      var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n      var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n      var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n      var key, own, out, exp;\n\n      if (IS_GLOBAL) {\n        source = name;\n      }\n\n      for (key in source) {\n        // contains in native\n        own = !IS_FORCED && target && target[key] !== undefined; // export native or passed\n\n        out = (own ? target : source)[key]; // bind timers to global for call from export context\n\n        exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out; // extend global\n\n        if (target) {\n          _redefine(target, key, out, type & $export.U);\n        } // export\n\n\n        if (exports[key] != out) {\n          _hide(exports, key, exp);\n        }\n\n        if (IS_PROTO && expProto[key] != out) {\n          expProto[key] = out;\n        }\n      }\n    };\n\n    _global.core = _core; // type bitmap\n\n    $export.F = 1; // forced\n\n    $export.G = 2; // global\n\n    $export.S = 4; // static\n\n    $export.P = 8; // proto\n\n    $export.B = 16; // bind\n\n    $export.W = 32; // wrap\n\n    $export.U = 64; // safe\n\n    $export.R = 128; // real proto method for `library`\n\n    var _export = $export; // 7.1.4 ToInteger\n\n    var ceil = Math.ceil;\n    var floor = Math.floor;\n\n    var _toInteger = function _toInteger(it) {\n      return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n    }; // 7.2.1 RequireObjectCoercible(argument)\n\n\n    var _defined = function _defined(it) {\n      if (it == undefined) {\n        throw TypeError(\"Can't call method on  \" + it);\n      }\n\n      return it;\n    }; // true  -> String#at\n    // false -> String#codePointAt\n\n\n    var _stringAt = function _stringAt(TO_STRING) {\n      return function (that, pos) {\n        var s = String(_defined(that));\n\n        var i = _toInteger(pos);\n\n        var l = s.length;\n        var a, b;\n\n        if (i < 0 || i >= l) {\n          return TO_STRING ? '' : undefined;\n        }\n\n        a = s.charCodeAt(i);\n        return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n      };\n    };\n\n    var $at = _stringAt(false);\n\n    _export(_export.P, 'String', {\n      // 21.1.3.3 String.prototype.codePointAt(pos)\n      codePointAt: function codePointAt(pos) {\n        return $at(this, pos);\n      }\n    });\n    var max = Math.max;\n    var min = Math.min;\n\n    var _toAbsoluteIndex = function _toAbsoluteIndex(index, length) {\n      index = _toInteger(index);\n      return index < 0 ? max(index + length, 0) : min(index, length);\n    };\n\n    var fromCharCode = String.fromCharCode;\n    var $fromCodePoint = String.fromCodePoint; // length should be 1, old FF problem\n\n    _export(_export.S + _export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n      // 21.1.2.2 String.fromCodePoint(...codePoints)\n      fromCodePoint: function fromCodePoint(x) {\n        var arguments$1 = arguments; // eslint-disable-line no-unused-vars\n\n        var res = [];\n        var aLen = arguments.length;\n        var i = 0;\n        var code;\n\n        while (aLen > i) {\n          code = +arguments$1[i++];\n\n          if (_toAbsoluteIndex(code, 0x10ffff) !== code) {\n            throw RangeError(code + ' is not a valid code point');\n          }\n\n          res.push(code < 0x10000 ? fromCharCode(code) : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00));\n        }\n\n        return res.join('');\n      }\n    });\n\n    var Space_Separator = /[\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\n    var ID_Start = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/;\n    var ID_Continue = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF9\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE83\\uDE86-\\uDE99\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/;\n    var unicode = {\n      Space_Separator: Space_Separator,\n      ID_Start: ID_Start,\n      ID_Continue: ID_Continue\n    };\n    var util = {\n      isSpaceSeparator: function isSpaceSeparator(c) {\n        return typeof c === 'string' && unicode.Space_Separator.test(c);\n      },\n      isIdStartChar: function isIdStartChar(c) {\n        return typeof c === 'string' && (c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c === '$' || c === '_' || unicode.ID_Start.test(c));\n      },\n      isIdContinueChar: function isIdContinueChar(c) {\n        return typeof c === 'string' && (c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c >= '0' && c <= '9' || c === '$' || c === '_' || c === '\\u200C' || c === '\\u200D' || unicode.ID_Continue.test(c));\n      },\n      isDigit: function isDigit(c) {\n        return typeof c === 'string' && /[0-9]/.test(c);\n      },\n      isHexDigit: function isHexDigit(c) {\n        return typeof c === 'string' && /[0-9A-Fa-f]/.test(c);\n      }\n    };\n    var source;\n    var parseState;\n    var stack;\n    var pos;\n    var line;\n    var column;\n    var token;\n    var key;\n    var root;\n\n    var parse = function parse(text, reviver) {\n      source = String(text);\n      parseState = 'start';\n      stack = [];\n      pos = 0;\n      line = 1;\n      column = 0;\n      token = undefined;\n      key = undefined;\n      root = undefined;\n\n      do {\n        token = lex(); // This code is unreachable.\n        // if (!parseStates[parseState]) {\n        //     throw invalidParseState()\n        // }\n\n        parseStates[parseState]();\n      } while (token.type !== 'eof');\n\n      if (typeof reviver === 'function') {\n        return internalize({\n          '': root\n        }, '', reviver);\n      }\n\n      return root;\n    };\n\n    function internalize(holder, name, reviver) {\n      var value = holder[name];\n\n      if (value != null && typeof value === 'object') {\n        if (Array.isArray(value)) {\n          for (var i = 0; i < value.length; i++) {\n            var key = String(i);\n            var replacement = internalize(value, key, reviver);\n\n            if (replacement === undefined) {\n              delete value[key];\n            } else {\n              Object.defineProperty(value, key, {\n                value: replacement,\n                writable: true,\n                enumerable: true,\n                configurable: true\n              });\n            }\n          }\n        } else {\n          for (var key$1 in value) {\n            var replacement$1 = internalize(value, key$1, reviver);\n\n            if (replacement$1 === undefined) {\n              delete value[key$1];\n            } else {\n              Object.defineProperty(value, key$1, {\n                value: replacement$1,\n                writable: true,\n                enumerable: true,\n                configurable: true\n              });\n            }\n          }\n        }\n      }\n\n      return reviver.call(holder, name, value);\n    }\n\n    var lexState;\n    var buffer;\n    var doubleQuote;\n    var sign;\n    var c;\n\n    function lex() {\n      lexState = 'default';\n      buffer = '';\n      doubleQuote = false;\n      sign = 1;\n\n      for (;;) {\n        c = peek(); // This code is unreachable.\n        // if (!lexStates[lexState]) {\n        //     throw invalidLexState(lexState)\n        // }\n\n        var token = lexStates[lexState]();\n\n        if (token) {\n          return token;\n        }\n      }\n    }\n\n    function peek() {\n      if (source[pos]) {\n        return String.fromCodePoint(source.codePointAt(pos));\n      }\n    }\n\n    function read() {\n      var c = peek();\n\n      if (c === '\\n') {\n        line++;\n        column = 0;\n      } else if (c) {\n        column += c.length;\n      } else {\n        column++;\n      }\n\n      if (c) {\n        pos += c.length;\n      }\n\n      return c;\n    }\n\n    var lexStates = {\n      default: function default$1() {\n        switch (c) {\n          case '\\t':\n          case '\\v':\n          case '\\f':\n          case ' ':\n          case '\\u00A0':\n          case '\\uFEFF':\n          case '\\n':\n          case '\\r':\n          case '\\u2028':\n          case '\\u2029':\n            read();\n            return;\n\n          case '/':\n            read();\n            lexState = 'comment';\n            return;\n\n          case undefined:\n            read();\n            return newToken('eof');\n        }\n\n        if (util.isSpaceSeparator(c)) {\n          read();\n          return;\n        } // This code is unreachable.\n        // if (!lexStates[parseState]) {\n        //     throw invalidLexState(parseState)\n        // }\n\n\n        return lexStates[parseState]();\n      },\n      comment: function comment() {\n        switch (c) {\n          case '*':\n            read();\n            lexState = 'multiLineComment';\n            return;\n\n          case '/':\n            read();\n            lexState = 'singleLineComment';\n            return;\n        }\n\n        throw invalidChar(read());\n      },\n      multiLineComment: function multiLineComment() {\n        switch (c) {\n          case '*':\n            read();\n            lexState = 'multiLineCommentAsterisk';\n            return;\n\n          case undefined:\n            throw invalidChar(read());\n        }\n\n        read();\n      },\n      multiLineCommentAsterisk: function multiLineCommentAsterisk() {\n        switch (c) {\n          case '*':\n            read();\n            return;\n\n          case '/':\n            read();\n            lexState = 'default';\n            return;\n\n          case undefined:\n            throw invalidChar(read());\n        }\n\n        read();\n        lexState = 'multiLineComment';\n      },\n      singleLineComment: function singleLineComment() {\n        switch (c) {\n          case '\\n':\n          case '\\r':\n          case '\\u2028':\n          case '\\u2029':\n            read();\n            lexState = 'default';\n            return;\n\n          case undefined:\n            read();\n            return newToken('eof');\n        }\n\n        read();\n      },\n      value: function value() {\n        switch (c) {\n          case '{':\n          case '[':\n            return newToken('punctuator', read());\n\n          case 'n':\n            read();\n            literal('ull');\n            return newToken('null', null);\n\n          case 't':\n            read();\n            literal('rue');\n            return newToken('boolean', true);\n\n          case 'f':\n            read();\n            literal('alse');\n            return newToken('boolean', false);\n\n          case '-':\n          case '+':\n            if (read() === '-') {\n              sign = -1;\n            }\n\n            lexState = 'sign';\n            return;\n\n          case '.':\n            buffer = read();\n            lexState = 'decimalPointLeading';\n            return;\n\n          case '0':\n            buffer = read();\n            lexState = 'zero';\n            return;\n\n          case '1':\n          case '2':\n          case '3':\n          case '4':\n          case '5':\n          case '6':\n          case '7':\n          case '8':\n          case '9':\n            buffer = read();\n            lexState = 'decimalInteger';\n            return;\n\n          case 'I':\n            read();\n            literal('nfinity');\n            return newToken('numeric', Infinity);\n\n          case 'N':\n            read();\n            literal('aN');\n            return newToken('numeric', NaN);\n\n          case '\"':\n          case \"'\":\n            doubleQuote = read() === '\"';\n            buffer = '';\n            lexState = 'string';\n            return;\n        }\n\n        throw invalidChar(read());\n      },\n      identifierNameStartEscape: function identifierNameStartEscape() {\n        if (c !== 'u') {\n          throw invalidChar(read());\n        }\n\n        read();\n        var u = unicodeEscape();\n\n        switch (u) {\n          case '$':\n          case '_':\n            break;\n\n          default:\n            if (!util.isIdStartChar(u)) {\n              throw invalidIdentifier();\n            }\n\n            break;\n        }\n\n        buffer += u;\n        lexState = 'identifierName';\n      },\n      identifierName: function identifierName() {\n        switch (c) {\n          case '$':\n          case '_':\n          case '\\u200C':\n          case '\\u200D':\n            buffer += read();\n            return;\n\n          case '\\\\':\n            read();\n            lexState = 'identifierNameEscape';\n            return;\n        }\n\n        if (util.isIdContinueChar(c)) {\n          buffer += read();\n          return;\n        }\n\n        return newToken('identifier', buffer);\n      },\n      identifierNameEscape: function identifierNameEscape() {\n        if (c !== 'u') {\n          throw invalidChar(read());\n        }\n\n        read();\n        var u = unicodeEscape();\n\n        switch (u) {\n          case '$':\n          case '_':\n          case '\\u200C':\n          case '\\u200D':\n            break;\n\n          default:\n            if (!util.isIdContinueChar(u)) {\n              throw invalidIdentifier();\n            }\n\n            break;\n        }\n\n        buffer += u;\n        lexState = 'identifierName';\n      },\n      sign: function sign$1() {\n        switch (c) {\n          case '.':\n            buffer = read();\n            lexState = 'decimalPointLeading';\n            return;\n\n          case '0':\n            buffer = read();\n            lexState = 'zero';\n            return;\n\n          case '1':\n          case '2':\n          case '3':\n          case '4':\n          case '5':\n          case '6':\n          case '7':\n          case '8':\n          case '9':\n            buffer = read();\n            lexState = 'decimalInteger';\n            return;\n\n          case 'I':\n            read();\n            literal('nfinity');\n            return newToken('numeric', sign * Infinity);\n\n          case 'N':\n            read();\n            literal('aN');\n            return newToken('numeric', NaN);\n        }\n\n        throw invalidChar(read());\n      },\n      zero: function zero() {\n        switch (c) {\n          case '.':\n            buffer += read();\n            lexState = 'decimalPoint';\n            return;\n\n          case 'e':\n          case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return;\n\n          case 'x':\n          case 'X':\n            buffer += read();\n            lexState = 'hexadecimal';\n            return;\n        }\n\n        return newToken('numeric', sign * 0);\n      },\n      decimalInteger: function decimalInteger() {\n        switch (c) {\n          case '.':\n            buffer += read();\n            lexState = 'decimalPoint';\n            return;\n\n          case 'e':\n          case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return;\n        }\n\n        if (util.isDigit(c)) {\n          buffer += read();\n          return;\n        }\n\n        return newToken('numeric', sign * Number(buffer));\n      },\n      decimalPointLeading: function decimalPointLeading() {\n        if (util.isDigit(c)) {\n          buffer += read();\n          lexState = 'decimalFraction';\n          return;\n        }\n\n        throw invalidChar(read());\n      },\n      decimalPoint: function decimalPoint() {\n        switch (c) {\n          case 'e':\n          case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return;\n        }\n\n        if (util.isDigit(c)) {\n          buffer += read();\n          lexState = 'decimalFraction';\n          return;\n        }\n\n        return newToken('numeric', sign * Number(buffer));\n      },\n      decimalFraction: function decimalFraction() {\n        switch (c) {\n          case 'e':\n          case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return;\n        }\n\n        if (util.isDigit(c)) {\n          buffer += read();\n          return;\n        }\n\n        return newToken('numeric', sign * Number(buffer));\n      },\n      decimalExponent: function decimalExponent() {\n        switch (c) {\n          case '+':\n          case '-':\n            buffer += read();\n            lexState = 'decimalExponentSign';\n            return;\n        }\n\n        if (util.isDigit(c)) {\n          buffer += read();\n          lexState = 'decimalExponentInteger';\n          return;\n        }\n\n        throw invalidChar(read());\n      },\n      decimalExponentSign: function decimalExponentSign() {\n        if (util.isDigit(c)) {\n          buffer += read();\n          lexState = 'decimalExponentInteger';\n          return;\n        }\n\n        throw invalidChar(read());\n      },\n      decimalExponentInteger: function decimalExponentInteger() {\n        if (util.isDigit(c)) {\n          buffer += read();\n          return;\n        }\n\n        return newToken('numeric', sign * Number(buffer));\n      },\n      hexadecimal: function hexadecimal() {\n        if (util.isHexDigit(c)) {\n          buffer += read();\n          lexState = 'hexadecimalInteger';\n          return;\n        }\n\n        throw invalidChar(read());\n      },\n      hexadecimalInteger: function hexadecimalInteger() {\n        if (util.isHexDigit(c)) {\n          buffer += read();\n          return;\n        }\n\n        return newToken('numeric', sign * Number(buffer));\n      },\n      string: function string() {\n        switch (c) {\n          case '\\\\':\n            read();\n            buffer += escape();\n            return;\n\n          case '\"':\n            if (doubleQuote) {\n              read();\n              return newToken('string', buffer);\n            }\n\n            buffer += read();\n            return;\n\n          case \"'\":\n            if (!doubleQuote) {\n              read();\n              return newToken('string', buffer);\n            }\n\n            buffer += read();\n            return;\n\n          case '\\n':\n          case '\\r':\n            throw invalidChar(read());\n\n          case '\\u2028':\n          case '\\u2029':\n            separatorChar(c);\n            break;\n\n          case undefined:\n            throw invalidChar(read());\n        }\n\n        buffer += read();\n      },\n      start: function start() {\n        switch (c) {\n          case '{':\n          case '[':\n            return newToken('punctuator', read());\n          // This code is unreachable since the default lexState handles eof.\n          // case undefined:\n          //     return newToken('eof')\n        }\n\n        lexState = 'value';\n      },\n      beforePropertyName: function beforePropertyName() {\n        switch (c) {\n          case '$':\n          case '_':\n            buffer = read();\n            lexState = 'identifierName';\n            return;\n\n          case '\\\\':\n            read();\n            lexState = 'identifierNameStartEscape';\n            return;\n\n          case '}':\n            return newToken('punctuator', read());\n\n          case '\"':\n          case \"'\":\n            doubleQuote = read() === '\"';\n            lexState = 'string';\n            return;\n        }\n\n        if (util.isIdStartChar(c)) {\n          buffer += read();\n          lexState = 'identifierName';\n          return;\n        }\n\n        throw invalidChar(read());\n      },\n      afterPropertyName: function afterPropertyName() {\n        if (c === ':') {\n          return newToken('punctuator', read());\n        }\n\n        throw invalidChar(read());\n      },\n      beforePropertyValue: function beforePropertyValue() {\n        lexState = 'value';\n      },\n      afterPropertyValue: function afterPropertyValue() {\n        switch (c) {\n          case ',':\n          case '}':\n            return newToken('punctuator', read());\n        }\n\n        throw invalidChar(read());\n      },\n      beforeArrayValue: function beforeArrayValue() {\n        if (c === ']') {\n          return newToken('punctuator', read());\n        }\n\n        lexState = 'value';\n      },\n      afterArrayValue: function afterArrayValue() {\n        switch (c) {\n          case ',':\n          case ']':\n            return newToken('punctuator', read());\n        }\n\n        throw invalidChar(read());\n      },\n      end: function end() {\n        // This code is unreachable since it's handled by the default lexState.\n        // if (c === undefined) {\n        //     read()\n        //     return newToken('eof')\n        // }\n        throw invalidChar(read());\n      }\n    };\n\n    function newToken(type, value) {\n      return {\n        type: type,\n        value: value,\n        line: line,\n        column: column\n      };\n    }\n\n    function literal(s) {\n      for (var i = 0, list = s; i < list.length; i += 1) {\n        var c = list[i];\n        var p = peek();\n\n        if (p !== c) {\n          throw invalidChar(read());\n        }\n\n        read();\n      }\n    }\n\n    function escape() {\n      var c = peek();\n\n      switch (c) {\n        case 'b':\n          read();\n          return '\\b';\n\n        case 'f':\n          read();\n          return '\\f';\n\n        case 'n':\n          read();\n          return '\\n';\n\n        case 'r':\n          read();\n          return '\\r';\n\n        case 't':\n          read();\n          return '\\t';\n\n        case 'v':\n          read();\n          return '\\v';\n\n        case '0':\n          read();\n\n          if (util.isDigit(peek())) {\n            throw invalidChar(read());\n          }\n\n          return '\\0';\n\n        case 'x':\n          read();\n          return hexEscape();\n\n        case 'u':\n          read();\n          return unicodeEscape();\n\n        case '\\n':\n        case '\\u2028':\n        case '\\u2029':\n          read();\n          return '';\n\n        case '\\r':\n          read();\n\n          if (peek() === '\\n') {\n            read();\n          }\n\n          return '';\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n          throw invalidChar(read());\n\n        case undefined:\n          throw invalidChar(read());\n      }\n\n      return read();\n    }\n\n    function hexEscape() {\n      var buffer = '';\n      var c = peek();\n\n      if (!util.isHexDigit(c)) {\n        throw invalidChar(read());\n      }\n\n      buffer += read();\n      c = peek();\n\n      if (!util.isHexDigit(c)) {\n        throw invalidChar(read());\n      }\n\n      buffer += read();\n      return String.fromCodePoint(parseInt(buffer, 16));\n    }\n\n    function unicodeEscape() {\n      var buffer = '';\n      var count = 4;\n\n      while (count-- > 0) {\n        var c = peek();\n\n        if (!util.isHexDigit(c)) {\n          throw invalidChar(read());\n        }\n\n        buffer += read();\n      }\n\n      return String.fromCodePoint(parseInt(buffer, 16));\n    }\n\n    var parseStates = {\n      start: function start() {\n        if (token.type === 'eof') {\n          throw invalidEOF();\n        }\n\n        push();\n      },\n      beforePropertyName: function beforePropertyName() {\n        switch (token.type) {\n          case 'identifier':\n          case 'string':\n            key = token.value;\n            parseState = 'afterPropertyName';\n            return;\n\n          case 'punctuator':\n            // This code is unreachable since it's handled by the lexState.\n            // if (token.value !== '}') {\n            //     throw invalidToken()\n            // }\n            pop();\n            return;\n\n          case 'eof':\n            throw invalidEOF();\n        } // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n\n      },\n      afterPropertyName: function afterPropertyName() {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator' || token.value !== ':') {\n        //     throw invalidToken()\n        // }\n        if (token.type === 'eof') {\n          throw invalidEOF();\n        }\n\n        parseState = 'beforePropertyValue';\n      },\n      beforePropertyValue: function beforePropertyValue() {\n        if (token.type === 'eof') {\n          throw invalidEOF();\n        }\n\n        push();\n      },\n      beforeArrayValue: function beforeArrayValue() {\n        if (token.type === 'eof') {\n          throw invalidEOF();\n        }\n\n        if (token.type === 'punctuator' && token.value === ']') {\n          pop();\n          return;\n        }\n\n        push();\n      },\n      afterPropertyValue: function afterPropertyValue() {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n        if (token.type === 'eof') {\n          throw invalidEOF();\n        }\n\n        switch (token.value) {\n          case ',':\n            parseState = 'beforePropertyName';\n            return;\n\n          case '}':\n            pop();\n        } // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n\n      },\n      afterArrayValue: function afterArrayValue() {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n        if (token.type === 'eof') {\n          throw invalidEOF();\n        }\n\n        switch (token.value) {\n          case ',':\n            parseState = 'beforeArrayValue';\n            return;\n\n          case ']':\n            pop();\n        } // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n\n      },\n      end: function end() {// This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'eof') {\n        //     throw invalidToken()\n        // }\n      }\n    };\n\n    function push() {\n      var value;\n\n      switch (token.type) {\n        case 'punctuator':\n          switch (token.value) {\n            case '{':\n              value = {};\n              break;\n\n            case '[':\n              value = [];\n              break;\n          }\n\n          break;\n\n        case 'null':\n        case 'boolean':\n        case 'numeric':\n        case 'string':\n          value = token.value;\n          break;\n        // This code is unreachable.\n        // default:\n        //     throw invalidToken()\n      }\n\n      if (root === undefined) {\n        root = value;\n      } else {\n        var parent = stack[stack.length - 1];\n\n        if (Array.isArray(parent)) {\n          parent.push(value);\n        } else {\n          Object.defineProperty(parent, key, {\n            value: value,\n            writable: true,\n            enumerable: true,\n            configurable: true\n          });\n        }\n      }\n\n      if (value !== null && typeof value === 'object') {\n        stack.push(value);\n\n        if (Array.isArray(value)) {\n          parseState = 'beforeArrayValue';\n        } else {\n          parseState = 'beforePropertyName';\n        }\n      } else {\n        var current = stack[stack.length - 1];\n\n        if (current == null) {\n          parseState = 'end';\n        } else if (Array.isArray(current)) {\n          parseState = 'afterArrayValue';\n        } else {\n          parseState = 'afterPropertyValue';\n        }\n      }\n    }\n\n    function pop() {\n      stack.pop();\n      var current = stack[stack.length - 1];\n\n      if (current == null) {\n        parseState = 'end';\n      } else if (Array.isArray(current)) {\n        parseState = 'afterArrayValue';\n      } else {\n        parseState = 'afterPropertyValue';\n      }\n    } // This code is unreachable.\n    // function invalidParseState () {\n    //     return new Error(`JSON5: invalid parse state '${parseState}'`)\n    // }\n    // This code is unreachable.\n    // function invalidLexState (state) {\n    //     return new Error(`JSON5: invalid lex state '${state}'`)\n    // }\n\n\n    function invalidChar(c) {\n      if (c === undefined) {\n        return syntaxError(\"JSON5: invalid end of input at \" + line + \":\" + column);\n      }\n\n      return syntaxError(\"JSON5: invalid character '\" + formatChar(c) + \"' at \" + line + \":\" + column);\n    }\n\n    function invalidEOF() {\n      return syntaxError(\"JSON5: invalid end of input at \" + line + \":\" + column);\n    } // This code is unreachable.\n    // function invalidToken () {\n    //     if (token.type === 'eof') {\n    //         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n    //     }\n    //     const c = String.fromCodePoint(token.value.codePointAt(0))\n    //     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n    // }\n\n\n    function invalidIdentifier() {\n      column -= 5;\n      return syntaxError(\"JSON5: invalid identifier character at \" + line + \":\" + column);\n    }\n\n    function separatorChar(c) {\n      console.warn(\"JSON5: '\" + formatChar(c) + \"' in strings is not valid ECMAScript; consider escaping\");\n    }\n\n    function formatChar(c) {\n      var replacements = {\n        \"'\": \"\\\\'\",\n        '\"': '\\\\\"',\n        '\\\\': '\\\\\\\\',\n        '\\b': '\\\\b',\n        '\\f': '\\\\f',\n        '\\n': '\\\\n',\n        '\\r': '\\\\r',\n        '\\t': '\\\\t',\n        '\\v': '\\\\v',\n        '\\0': '\\\\0',\n        '\\u2028': '\\\\u2028',\n        '\\u2029': '\\\\u2029'\n      };\n\n      if (replacements[c]) {\n        return replacements[c];\n      }\n\n      if (c < ' ') {\n        var hexString = c.charCodeAt(0).toString(16);\n        return '\\\\x' + ('00' + hexString).substring(hexString.length);\n      }\n\n      return c;\n    }\n\n    function syntaxError(message) {\n      var err = new SyntaxError(message);\n      err.lineNumber = line;\n      err.columnNumber = column;\n      return err;\n    }\n\n    var stringify = function stringify(value, replacer, space) {\n      var stack = [];\n      var indent = '';\n      var propertyList;\n      var replacerFunc;\n      var gap = '';\n      var quote;\n\n      if (replacer != null && typeof replacer === 'object' && !Array.isArray(replacer)) {\n        space = replacer.space;\n        quote = replacer.quote;\n        replacer = replacer.replacer;\n      }\n\n      if (typeof replacer === 'function') {\n        replacerFunc = replacer;\n      } else if (Array.isArray(replacer)) {\n        propertyList = [];\n\n        for (var i = 0, list = replacer; i < list.length; i += 1) {\n          var v = list[i];\n          var item = void 0;\n\n          if (typeof v === 'string') {\n            item = v;\n          } else if (typeof v === 'number' || v instanceof String || v instanceof Number) {\n            item = String(v);\n          }\n\n          if (item !== undefined && propertyList.indexOf(item) < 0) {\n            propertyList.push(item);\n          }\n        }\n      }\n\n      if (space instanceof Number) {\n        space = Number(space);\n      } else if (space instanceof String) {\n        space = String(space);\n      }\n\n      if (typeof space === 'number') {\n        if (space > 0) {\n          space = Math.min(10, Math.floor(space));\n          gap = '          '.substr(0, space);\n        }\n      } else if (typeof space === 'string') {\n        gap = space.substr(0, 10);\n      }\n\n      return serializeProperty('', {\n        '': value\n      });\n\n      function serializeProperty(key, holder) {\n        var value = holder[key];\n\n        if (value != null) {\n          if (typeof value.toJSON5 === 'function') {\n            value = value.toJSON5(key);\n          } else if (typeof value.toJSON === 'function') {\n            value = value.toJSON(key);\n          }\n        }\n\n        if (replacerFunc) {\n          value = replacerFunc.call(holder, key, value);\n        }\n\n        if (value instanceof Number) {\n          value = Number(value);\n        } else if (value instanceof String) {\n          value = String(value);\n        } else if (value instanceof Boolean) {\n          value = value.valueOf();\n        }\n\n        switch (value) {\n          case null:\n            return 'null';\n\n          case true:\n            return 'true';\n\n          case false:\n            return 'false';\n        }\n\n        if (typeof value === 'string') {\n          return quoteString(value);\n        }\n\n        if (typeof value === 'number') {\n          return String(value);\n        }\n\n        if (typeof value === 'object') {\n          return Array.isArray(value) ? serializeArray(value) : serializeObject(value);\n        }\n\n        return undefined;\n      }\n\n      function quoteString(value) {\n        var quotes = {\n          \"'\": 0.1,\n          '\"': 0.2\n        };\n        var replacements = {\n          \"'\": \"\\\\'\",\n          '\"': '\\\\\"',\n          '\\\\': '\\\\\\\\',\n          '\\b': '\\\\b',\n          '\\f': '\\\\f',\n          '\\n': '\\\\n',\n          '\\r': '\\\\r',\n          '\\t': '\\\\t',\n          '\\v': '\\\\v',\n          '\\0': '\\\\0',\n          '\\u2028': '\\\\u2028',\n          '\\u2029': '\\\\u2029'\n        };\n        var product = '';\n\n        for (var i = 0; i < value.length; i++) {\n          var c = value[i];\n\n          switch (c) {\n            case \"'\":\n            case '\"':\n              quotes[c]++;\n              product += c;\n              continue;\n\n            case '\\0':\n              if (util.isDigit(value[i + 1])) {\n                product += '\\\\x00';\n                continue;\n              }\n\n          }\n\n          if (replacements[c]) {\n            product += replacements[c];\n            continue;\n          }\n\n          if (c < ' ') {\n            var hexString = c.charCodeAt(0).toString(16);\n            product += '\\\\x' + ('00' + hexString).substring(hexString.length);\n            continue;\n          }\n\n          product += c;\n        }\n\n        var quoteChar = quote || Object.keys(quotes).reduce(function (a, b) {\n          return quotes[a] < quotes[b] ? a : b;\n        });\n        product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar]);\n        return quoteChar + product + quoteChar;\n      }\n\n      function serializeObject(value) {\n        if (stack.indexOf(value) >= 0) {\n          throw TypeError('Converting circular structure to JSON5');\n        }\n\n        stack.push(value);\n        var stepback = indent;\n        indent = indent + gap;\n        var keys = propertyList || Object.keys(value);\n        var partial = [];\n\n        for (var i = 0, list = keys; i < list.length; i += 1) {\n          var key = list[i];\n          var propertyString = serializeProperty(key, value);\n\n          if (propertyString !== undefined) {\n            var member = serializeKey(key) + ':';\n\n            if (gap !== '') {\n              member += ' ';\n            }\n\n            member += propertyString;\n            partial.push(member);\n          }\n        }\n\n        var final;\n\n        if (partial.length === 0) {\n          final = '{}';\n        } else {\n          var properties;\n\n          if (gap === '') {\n            properties = partial.join(',');\n            final = '{' + properties + '}';\n          } else {\n            var separator = ',\\n' + indent;\n            properties = partial.join(separator);\n            final = '{\\n' + indent + properties + ',\\n' + stepback + '}';\n          }\n        }\n\n        stack.pop();\n        indent = stepback;\n        return final;\n      }\n\n      function serializeKey(key) {\n        if (key.length === 0) {\n          return quoteString(key);\n        }\n\n        var firstChar = String.fromCodePoint(key.codePointAt(0));\n\n        if (!util.isIdStartChar(firstChar)) {\n          return quoteString(key);\n        }\n\n        for (var i = firstChar.length; i < key.length; i++) {\n          if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {\n            return quoteString(key);\n          }\n        }\n\n        return key;\n      }\n\n      function serializeArray(value) {\n        if (stack.indexOf(value) >= 0) {\n          throw TypeError('Converting circular structure to JSON5');\n        }\n\n        stack.push(value);\n        var stepback = indent;\n        indent = indent + gap;\n        var partial = [];\n\n        for (var i = 0; i < value.length; i++) {\n          var propertyString = serializeProperty(String(i), value);\n          partial.push(propertyString !== undefined ? propertyString : 'null');\n        }\n\n        var final;\n\n        if (partial.length === 0) {\n          final = '[]';\n        } else {\n          if (gap === '') {\n            var properties = partial.join(',');\n            final = '[' + properties + ']';\n          } else {\n            var separator = ',\\n' + indent;\n            var properties$1 = partial.join(separator);\n            final = '[\\n' + indent + properties$1 + ',\\n' + stepback + ']';\n          }\n        }\n\n        stack.pop();\n        indent = stepback;\n        return final;\n      }\n    };\n\n    var JSON5 = {\n      parse: parse,\n      stringify: stringify\n    };\n    var lib = JSON5;\n    var es5 = lib;\n    return es5;\n  });\n});\n\nfunction transformHeader(h) {\n  return h.trim().replace(/[.]/g, \"\").replace(/(-|_)/g, \" \").toLocaleLowerCase();\n} // https://support.code.org/hc/en-us/articles/5257673491469-Submit-Datasets-for-Data-Science-\n// spec: https://www.datascience4everyone.org/_files/ugd/d2c47c_db9901e7a3b04350b561457bea71b48e.pdf\n\n\nfunction googleSheetUrl(id, sheet = \"Sheet1\") {\n  let url = `https://docs.google.com/spreadsheets/d/${id}/gviz/tq?tqx=out:csv`;\n  if (sheet) url += `&sheet=${sheet}`;\n  return url;\n}\n\nfunction patchCsvUrl(url) {\n  const good = /*#__PURE__*/_wrapRegExp(/https:\\/\\/docs.google.com\\/spreadsheets\\/d\\/((?:(?!\\/)[\\s\\S])+)\\//i, {\n    id: 1\n  }).exec(url);\n\n  if (good) return googleSheetUrl(good.groups.id);\n  return url;\n}\n\nasync function tryParseJson(source) {\n  try {\n    const data = dist.parse(source);\n    if (data && Array.isArray(data) && typeof data[0] === \"object\") return {\n      file: {\n        data\n      }\n    };else return {\n      file: {\n        errors: [{\n          type: \"json\",\n          code: \"invalid\",\n          message: \"Invalid JSON\",\n          row: 0\n        }]\n      }\n    };\n  } catch (e) {\n    return undefined;\n  }\n}\n\nconst cachedCSVs = {};\nconst handlers = {\n  download: async msg => {\n    const url = patchCsvUrl(msg.url);\n    if (cachedCSVs[url]) return Promise.resolve(cachedCSVs[url]);\n\n    try {\n      const resp = await fetch(url);\n      const source = await resp.text();\n      const res = await handlers.parse({\n        type: \"parse\",\n        source\n      });\n      cachedCSVs[url] = res;\n      return res;\n    } catch (e) {\n      return {\n        file: {\n          errors: [{\n            type: \"json\",\n            code: \"invalid\",\n            message: e + \"\",\n            row: 0\n          }]\n        }\n      };\n    }\n  },\n  save: async msg => {\n    const {\n      fileHandle,\n      data\n    } = msg; // convert to CSV\n\n    const contents = papaparse_min.unparse(data); // Create a FileSystemWritableFileStream to write to.\n\n    const writable = await fileHandle.createWritable(); // Write the contents of the file to the stream.\n\n    await writable.write(contents); // Close the file and write the contents to disk.\n\n    await writable.close();\n    return {};\n  },\n  parse: async msg => {\n    const {\n      source\n    } = msg;\n\n    if (/\\s*\\[/.test(source)) {\n      const res = await tryParseJson(source);\n      if (res) return res;\n    }\n\n    return new Promise(resolve => {\n      papaparse_min.parse(source, {\n        header: true,\n        dynamicTyping: true,\n        skipEmptyLines: true,\n        comments: \"#\",\n        transformHeader,\n        complete: r => {\n          resolve({\n            file: r\n          });\n        }\n      });\n    });\n  },\n  unparse: async msg => {\n    const {\n      data\n    } = msg;\n    const text = papaparse_min.unparse(data);\n    return {\n      text\n    };\n  }\n};\n\nasync function handleMessage(event) {\n  const message = event.data;\n  const {\n    id,\n    worker,\n    type\n  } = message;\n  if (worker !== \"csv\") return;\n\n  try {\n    const handler = handlers[type];\n    const resp = await handler(message);\n    self.postMessage(_extends({\n      id,\n      worker\n    }, resp));\n  } catch (e) {\n    self.postMessage({\n      id,\n      worker,\n      error: e + \"\"\n    });\n  }\n}\n\nself.addEventListener(\"message\", handleMessage);\nconsole.debug(`csv: worker registered`);\n//# sourceMappingURL=csv-worker.js.map\n"],"names":[],"sourceRoot":""}